[{"D:\\year3\\fall\\database\\frontend_2\\src\\index.js":"1","D:\\year3\\fall\\database\\frontend_2\\src\\reportWebVitals.js":"2","D:\\year3\\fall\\database\\frontend_2\\src\\components\\App.js":"3","D:\\year3\\fall\\database\\frontend_2\\src\\components\\Chat.js":"4","D:\\year3\\fall\\database\\frontend_2\\src\\components\\db.js":"5","D:\\year3\\fall\\database\\frontend_2\\src\\components\\MidPane.js":"6","D:\\year3\\fall\\database\\frontend_2\\src\\components\\LeftPane.js":"7","D:\\year3\\fall\\database\\frontend_2\\src\\components\\RightPane.js":"8","D:\\year3\\fall\\database\\frontend_2\\src\\components\\theme.js":"9"},{"size":506,"mtime":1611057732282,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1609901598332,"results":"12","hashOfConfig":"11"},{"size":24235,"mtime":1611113609976,"results":"13","hashOfConfig":"11"},{"size":426,"mtime":1611046195686,"results":"14","hashOfConfig":"11"},{"size":4178,"mtime":1611067409712,"results":"15","hashOfConfig":"11"},{"size":4980,"mtime":1611113401105,"results":"16","hashOfConfig":"11"},{"size":4417,"mtime":1611112334600,"results":"17","hashOfConfig":"11"},{"size":5653,"mtime":1611112980143,"results":"18","hashOfConfig":"11"},{"size":2917,"mtime":1611068371565,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1uh9bxx",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"D:\\year3\\fall\\database\\frontend_2\\src\\index.js",["43"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n// import socketIOClient from \"socket.io-client\";\r\n// const ENDPOINT = \"ws://34.80.122.70:5000/\";\r\n\r\n// const socket = socketIOClient(ENDPOINT);\r\n\r\n\r\n\r\nReactDOM.render(\r\n    \r\n  <App/>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n\r\n\r\n\r\n{/* <React.StrictMode>\r\n<App socket={socket}/>\r\n</React.StrictMode> */}",["44","45"],"D:\\year3\\fall\\database\\frontend_2\\src\\reportWebVitals.js",[],"D:\\year3\\fall\\database\\frontend_2\\src\\components\\App.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64"],"D:\\year3\\fall\\database\\frontend_2\\src\\components\\Chat.js",[],"D:\\year3\\fall\\database\\frontend_2\\src\\components\\db.js",[],"D:\\year3\\fall\\database\\frontend_2\\src\\components\\MidPane.js",["65","66","67"],"import React, {useEffect, useState, useRef } from 'react';\r\nimport './Chat.css';\r\nimport { faEdit, faPaperPlane} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nfunction MidPane(props) {\r\n    const messagesEndRef = useRef(null)\r\n    const [tmpChatTitle, setTmpChatTitle] = useState(\"\")\r\n    const [editTitle, setEditTitle] = useState(false)\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current.scrollIntoView({ behavior: \"auto\" })\r\n    }\r\n\r\n    const getNickname = (username) => {\r\n        if(props.data.chatContent != undefined && props.data.chatContent.people != undefined){\r\n            for(var i in props.data.chatContent.people){\r\n                if(props.data.chatContent.people[i].username == username){\r\n                    return props.data.chatContent.people[i].nickname\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const emojis = [\"🌴\", \"🥛\", \"🐒\", \"🥺\", \"🌐\"]\r\n\r\n    useEffect(()=>{\r\n        if(props.data.chatContent !== undefined){\r\n            setTmpChatTitle(props.data.chatContent.name)\r\n            setEditTitle(false)\r\n        }\r\n    }, [props.data.chatContent])\r\n\r\n    useEffect(scrollToBottom, [props.data.chatContent]);\r\n\r\n    return (\r\n        <div id=\"MidPaneContainer\">\r\n                {editTitle === true?\r\n                    ( <div className=\"Chat_title_container\">\r\n                        <input\r\n                            className=\"Chat_title\"\r\n                            value={tmpChatTitle}\r\n                            onChange={(e) => setTmpChatTitle(e.target.value)}\r\n                            onKeyDown={(e) => {\r\n                                if(e.key === 'Enter'){\r\n                                    setEditTitle(false);\r\n                                    props.handlers.setNewTitle(tmpChatTitle);\r\n                                }\r\n                            }\r\n                        }\r\n                        ></input>\r\n                    </div>):(\r\n\r\n                    <div className=\"Chat_title_container\">\r\n                        <div className=\"Chat_title\">\r\n                            {props.data.chatContent !== undefined?props.data.chatContent.name:\"udef\"}\r\n                        </div>\r\n                        <div className=\"rename_button\" onClick={(e) => {setEditTitle(true)}}>\r\n                            <FontAwesomeIcon icon={faEdit} className=\"logo-icon\"/>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n            }\r\n                \r\n            <div className=\"Chat-messages\">\r\n\r\n                {props.data.chatContent !== undefined && props.data.chatContent.messages !== undefined? (props.data.chatContent.messages.length === 0 ? (\r\n                <p>\r\n                    {'No messages...'}\r\n                </p>\r\n                ) : (\r\n                    \r\n                    props.data.chatContent.messages.map(({ sender, body }, i) => (\r\n                        <div className={props.data.username===sender?\"Chat-message right\":\"Chat-message left\"} key={i}>\r\n                            <div className=\"Chat-message-sender\">{getNickname(sender)}</div>\r\n                            <div className=\"Chat-message-body\">{body}</div>\r\n                            <div className=\"Chat-message-filler\"></div>\r\n                        </div>\r\n                    ))\r\n                    \r\n                )\r\n                ):( <p style={{ color: '#ccc' }}>\r\n                {'loading...'}\r\n                </p>)}\r\n                <div style={{ float:\"left\", clear: \"both\"}}\r\n                    ref={messagesEndRef}>\r\n                </div>\r\n            </div >\r\n            <div className=\"Chat-input-container\">\r\n                <textarea\r\n                className=\"Chat-input\"\r\n                placeholder=\"Message Body 🐑\"\r\n                value={props.data.sendingMessageBody}\r\n                onChange={(e) => {\r\n                    if(e.target.value !== '\\n'){\r\n                        props.handlers.setSendingMessageBody(e.target.value)\r\n                    }\r\n                }}\r\n                onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                        props.handlers.sendMessage(props.data.sendingMessageBody);\r\n                    }\r\n                }}\r\n                ></textarea>\r\n                {props.data.sendingMessageBody === \"\"? (\r\n                        <div className=\"send-icon\" onClick={(e) => { props.handlers.sendMessage(emojis[props.data.emoji])}}>{emojis[props.data.emoji]}</div>\r\n                    ) : (\r\n                        <div className=\"send-icon\" onClick={(e) => { props.handlers.sendMessage(props.data.sendingMessageBody)}}>\r\n                            <FontAwesomeIcon icon={faPaperPlane} className=\"logo-icon\"/>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default MidPane;","D:\\year3\\fall\\database\\frontend_2\\src\\components\\LeftPane.js",["68"],"import React, { useState } from 'react';\r\nimport { faSignOutAlt, faPlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Popup from 'reactjs-popup';\r\n\r\nimport './Chat.css';\r\n\r\nfunction LeftPane(props) {\r\n    const [newRoomName, setNewRoomName] = useState(\"\")\r\n    const msToTime = (millis) =>{\r\n        var seconds = (millis / 1000).toFixed(0);\r\n        var minutes = (seconds / 60).toFixed(0);\r\n        var hours = (minutes / 60).toFixed(0);\r\n        var days = (hours / 24).toFixed(0);\r\n        var weeks = (days / 7).toFixed(0);\r\n        var years = (days / 365).toFixed(0);\r\n\r\n        if(seconds < 60)\r\n            return `< 1m`;\r\n        if(minutes < 60)\r\n            return `${minutes}m`;\r\n        if(hours < 24)\r\n            return `${hours}h`;\r\n        if(days < 30)\r\n            return `${days}d`;\r\n        if(weeks < 55)\r\n            return `${weeks}w`;\r\n        return `${years}y`\r\n    }\r\n\r\n    const getLastTime = (lastSendDate) =>{\r\n        var a = msToTime(Number((Date.now()) - new Date(lastSendDate).getTime()))\r\n        return(a)\r\n    }\r\n\r\n    return (\r\n        <div id=\"LeftPaneContainer\">\r\n            <div id=\"LeftTopBarContainer\">\r\n                <div id=\"logo\" className=\"LeftTopBarElement\" onClick={props.handlers.handleLogOut}>\r\n                    <FontAwesomeIcon icon={faSignOutAlt} className=\"logo-icon\"\r\n                    rotation={180}/>\r\n                </div>\r\n                \r\n                <div id=\"AppNameUser\" className=\"LeftTopBarElement\">\r\n                    {props.data.username}\r\n                </div>\r\n\r\n                <Popup trigger={<div id=\"newRoom\" className=\"LeftTopBarElement\">\r\n                        <FontAwesomeIcon icon={faPlus}  className=\"logo-icon\"/>\r\n                        </div>} \r\n                modal>\r\n                     {close => (\r\n                        <div className=\"popup\">\r\n                            <a className=\"close\" onClick={close}>\r\n                                &times;\r\n                            </a>\r\n                            <h3> Room Name </h3>\r\n                            <div className=\"content\">\r\n                            <input\r\n                                className=\"Left-search-input\"\r\n                                placeholder=\"New Room Name\"\r\n                                value={newRoomName}\r\n                                onChange={(e) => setNewRoomName(e.target.value)}\r\n                                onKeyDown={(e) => {\r\n                                    if(e.key === 'Enter'){\r\n                                        props.handlers.createNewChatroom(newRoomName, setNewRoomName);\r\n                                        close();\r\n                                    }\r\n                                }\r\n                            }\r\n                            ></input>\r\n                            </div>\r\n                        </div>\r\n                        )}\r\n                </Popup>\r\n                \r\n            </div>\r\n            \r\n            <input\r\n                className=\"Left-search-input\"\r\n                placeholder=\"Search Rooms\"\r\n                value={props.data.leftFilter}\r\n                onChange={(e) => props.handlers.setLeftFilter(e.target.value)}\r\n            ></input>\r\n            <div id=\"LeftListOfChatRoom\">\r\n                {props.data.chatRooms.map((chatroom)=>(\r\n                    <div key={chatroom.id} className={`LeftIndividualChatRoom ${chatroom.id===props.data.selectedChat? \"selected\" : \"\"} ${chatroom.last_send_date>=chatroom.last_read_date? \"bold\" : \"\"}`}\r\n                    \r\n                    \r\n                    id={chatroom.id} onClick={(e) => {props.handlers.changeChatRoom(e, chatroom.id)}}>\r\n                        <div className=\"Chatroom-list-title\">{chatroom.name} </div>\r\n                        <div className=\"Chatroom-list-content\"> \r\n                            <div className=\"Chatroom-list-sender\">{chatroom.last_sender}:  </div>\r\n                            <div className=\"Chatroom-list-message\">  {chatroom.last_message}</div>\r\n                            <div className=\"Chatroom-list-time\">{getLastTime(chatroom.last_send_date)}</div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default LeftPane;\r\n","D:\\year3\\fall\\database\\frontend_2\\src\\components\\RightPane.js",["69","70","71","72","73","74"],"import './Chat.css';\r\nimport React, {useEffect, useState, useRef } from 'react';\r\nimport { faEdit, faPaperPlane} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Popup from 'reactjs-popup';\r\n\r\nfunction RightPane(props) {\r\n\r\n    const [newNickname, setNewNickname] = useState(\"\")\r\n\r\n    return (\r\n        <div id=\"RightPaneContainer\">\r\n            <div className=\"offset_5\">\r\n            </div>\r\n            <div className=\"button_container\">\r\n                <div className=\"right_pane_button\" onClick={(e) => {props.handlers.leaveChatRoom(e)}}>\r\n                    Leave Chatroom\r\n                </div>\r\n            </div>\r\n            <div　className=\"right_people_list\">\r\n            Members\r\n                {props.data.chatContent!=undefined && props.data.chatContent.people!=undefined? \r\n                (\r\n                    props.data.chatContent.people.map((person, i) => (\r\n                        <div key={i} className=\"right_person\">\r\n                            <div className=\"right-username\">{person.username}</div>\r\n                            <div className=\"right-nickname\"\r\n                            >{person.nickname}</div>\r\n                            <div className=\"right-nickname-sep\"> </div>\r\n                            <Popup trigger={\r\n                                    <FontAwesomeIcon icon={faEdit}  className=\"logo-icon nickname-button\"/>} \r\n                            modal>\r\n                                {close => (\r\n                                    <div className=\"popup\">\r\n                                        <a className=\"close\" onClick={close}>\r\n                                            &times;\r\n                                        </a>\r\n                                        <h3> New Nickname for {person.username}: </h3>\r\n                                        <div className=\"content\">\r\n                                        <input\r\n                                            className=\"Left-search-input\"\r\n                                            placeholder=\"New Nickname\"\r\n                                            value={newNickname}\r\n                                            onChange={(e) => setNewNickname(e.target.value)}\r\n                                            onKeyDown={(e) => {\r\n                                                if(e.key === 'Enter'){\r\n                                                    props.handlers.editNickname(person.username, newNickname, setNewNickname);\r\n                                                    close();\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        ></input>\r\n                                        </div>\r\n                                    </div>\r\n                                    )}\r\n                            </Popup>\r\n                        </div>\r\n                \r\n                )))\r\n                : \r\n                (\r\n                    <div> loading </div>\r\n                )}\r\n            </div>\r\n            <div className=\"add-new-member-container\">\r\n                <input\r\n                    className=\"right-member-input\"\r\n                    placeholder=\"Add Member\"\r\n                    value={props.data.newMember}\r\n                    onChange={(e) => props.handlers.setNewMember(e.target.value)}\r\n                    onKeyDown={(e) => {\r\n                        if(e.key === 'Enter'){\r\n                            props.handlers.addNewMember(props.data.newMember, props.handlers.setNewMember);\r\n                        }\r\n                    }}\r\n                ></input>\r\n                <button onClick={(e) => {\r\n                            props.handlers.addNewMember(props.data.newMember, props.handlers.setNewMember);\r\n                    }} className=\"add-member-button\">Invite</button>\r\n            </div>\r\n\r\n            <div className=\"select-emoji\">\r\n                Emoji\r\n                <div className=\"emojis-container\">\r\n                    <div className=\"emoji\" onClick={(e) => {props.handlers.changeEmoji(0)}}> 🌴 </div>\r\n                    <div className=\"emoji\" onClick={(e) => {props.handlers.changeEmoji(1)}}> 🥛 </div>\r\n                    <div className=\"emoji\" onClick={(e) => {props.handlers.changeEmoji(2)}}> 🐒 </div>\r\n                    <div className=\"emoji\" onClick={(e) => {props.handlers.changeEmoji(3)}}> 🥺 </div>\r\n                    <div className=\"emoji\" onClick={(e) => {props.handlers.changeEmoji(4)}}> 🌐 </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"offset_5\">\r\n            </div>\r\n            <div className=\"select-emoji\">\r\n                Theme\r\n                <div className=\"emojis-container\">\r\n                    <div className=\"emoji\" style={{backgroundColor: \"#cceca4\"}} onClick={(e) => {props.handlers.changeTheme(0)}}></div>\r\n                    <div className=\"emoji\" style={{backgroundColor: \"#d5b9a1\"}} onClick={(e) => {props.handlers.changeTheme(1)}}></div>\r\n                    <div className=\"emoji\" style={{backgroundColor: \"#bebdbc\"}} onClick={(e) => {props.handlers.changeTheme(2)}}></div>\r\n                    <div className=\"emoji\" style={{backgroundColor: \"#f5e1a5\"}} onClick={(e) => {props.handlers.changeTheme(3)}}></div>\r\n                    <div className=\"emoji\" style={{backgroundColor: \"#b3e6ea\"}} onClick={(e) => {props.handlers.changeTheme(4)}}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default RightPane;\r\n","D:\\year3\\fall\\database\\frontend_2\\src\\components\\theme.js",[],{"ruleId":"75","severity":1,"message":"76","line":26,"column":1,"nodeType":"77","messageId":"78","endLine":28,"endColumn":24},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":123,"column":41,"nodeType":"89","messageId":"90","endLine":123,"endColumn":43},{"ruleId":"87","severity":1,"message":"88","line":124,"column":99,"nodeType":"89","messageId":"90","endLine":124,"endColumn":101},{"ruleId":"87","severity":1,"message":"91","line":133,"column":18,"nodeType":"89","messageId":"90","endLine":133,"endColumn":20},{"ruleId":"92","severity":1,"message":"93","line":144,"column":8,"nodeType":"94","endLine":144,"endColumn":21,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":154,"column":8,"nodeType":"94","endLine":154,"endColumn":24,"suggestions":"97"},{"ruleId":"87","severity":1,"message":"88","line":162,"column":54,"nodeType":"89","messageId":"90","endLine":162,"endColumn":56},{"ruleId":"92","severity":1,"message":"96","line":168,"column":8,"nodeType":"94","endLine":168,"endColumn":22,"suggestions":"98"},{"ruleId":"92","severity":1,"message":"96","line":178,"column":8,"nodeType":"94","endLine":178,"endColumn":19,"suggestions":"99"},{"ruleId":"87","severity":1,"message":"88","line":190,"column":16,"nodeType":"89","messageId":"90","endLine":190,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":198,"column":8,"nodeType":"94","endLine":198,"endColumn":19,"suggestions":"100"},{"ruleId":"92","severity":1,"message":"96","line":208,"column":8,"nodeType":"94","endLine":208,"endColumn":18,"suggestions":"101"},{"ruleId":"92","severity":1,"message":"102","line":245,"column":8,"nodeType":"94","endLine":245,"endColumn":18,"suggestions":"103"},{"ruleId":"92","severity":1,"message":"104","line":259,"column":8,"nodeType":"94","endLine":259,"endColumn":19,"suggestions":"105"},{"ruleId":"83","severity":1,"message":"106","line":273,"column":11,"nodeType":"85","messageId":"86","endLine":273,"endColumn":37},{"ruleId":"92","severity":1,"message":"107","line":343,"column":8,"nodeType":"94","endLine":343,"endColumn":22,"suggestions":"108"},{"ruleId":"92","severity":1,"message":"109","line":389,"column":8,"nodeType":"94","endLine":389,"endColumn":26,"suggestions":"110"},{"ruleId":"87","severity":1,"message":"88","line":569,"column":23,"nodeType":"89","messageId":"90","endLine":569,"endColumn":25},{"ruleId":"83","severity":1,"message":"111","line":668,"column":29,"nodeType":"85","messageId":"86","endLine":668,"endColumn":30},{"ruleId":"87","severity":1,"message":"91","line":17,"column":35,"nodeType":"89","messageId":"90","endLine":17,"endColumn":37},{"ruleId":"87","severity":1,"message":"91","line":17,"column":81,"nodeType":"89","messageId":"90","endLine":17,"endColumn":83},{"ruleId":"87","severity":1,"message":"88","line":19,"column":62,"nodeType":"89","messageId":"90","endLine":19,"endColumn":64},{"ruleId":"112","severity":1,"message":"113","line":54,"column":29,"nodeType":"114","endLine":54,"endColumn":66},{"ruleId":"83","severity":1,"message":"115","line":2,"column":16,"nodeType":"85","messageId":"86","endLine":2,"endColumn":25},{"ruleId":"83","severity":1,"message":"116","line":2,"column":37,"nodeType":"85","messageId":"86","endLine":2,"endColumn":43},{"ruleId":"83","severity":1,"message":"117","line":3,"column":18,"nodeType":"85","messageId":"86","endLine":3,"endColumn":30},{"ruleId":"87","severity":1,"message":"91","line":22,"column":40,"nodeType":"89","messageId":"90","endLine":22,"endColumn":42},{"ruleId":"87","severity":1,"message":"91","line":22,"column":84,"nodeType":"89","messageId":"90","endLine":22,"endColumn":86},{"ruleId":"112","severity":1,"message":"113","line":35,"column":41,"nodeType":"114","endLine":35,"endColumn":78},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Popup' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chatContent', 'chatRooms', 'findIndexFromID', and 'selectedChat'. Either include them or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has missing dependencies: 'chatContent' and 'selectedChat'. Either include them or remove the dependency array.",["121"],["122"],["123"],["124"],["125"],"React Hook useEffect has missing dependencies: 'cookie' and 'username'. Either include them or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'selectedChat'. Either include it or remove the dependency array.",["127"],"'findContentIndexFromChatID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'chatRooms', 'cookie', 'findIndexFromID', and 'username'. Either include them or remove the dependency array.",["128"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["129"],"'i' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useRef' is defined but never used.","'faPaperPlane' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [chatContent, chatRooms, findIndexFromID, recvMessage, selectedChat]",{"range":"150","text":"151"},"Update the dependencies array to be: [chatContent, recvEmojiTheme, selectedChat]",{"range":"152","text":"153"},"Update the dependencies array to be: [chatContent, recvNickname, selectedChat]",{"range":"154","text":"155"},"Update the dependencies array to be: [chatContent, recvLeave, selectedChat]",{"range":"156","text":"157"},"Update the dependencies array to be: [chatContent, chatRooms, findIndexFromID, recvTitle, selectedChat]",{"range":"158","text":"159"},"Update the dependencies array to be: [chatContent, recvJoin, selectedChat]",{"range":"160","text":"161"},"Update the dependencies array to be: [cookie, recvRoom, username]",{"range":"162","text":"163"},"Update the dependencies array to be: [chatRooms, selectedChat]",{"range":"164","text":"165"},"Update the dependencies array to be: [chatRooms, cookie, findIndexFromID, selectedChat, username]",{"range":"166","text":"167"},"Update the dependencies array to be: [loggedIn, cookie, username]",{"range":"168","text":"169"},[5196,5209],"[chatContent, chatRooms, findIndexFromID, recvMessage, selectedChat]",[5647,5663],"[chatContent, recvEmojiTheme, selectedChat]",[6221,6235],"[chatContent, recvNickname, selectedChat]",[6675,6686],"[chatContent, recvLeave, selectedChat]",[7305,7316],"[chatContent, chatRooms, findIndexFromID, recvTitle, selectedChat]",[7707,7717],"[chatContent, recvJoin, selectedChat]",[8810,8820],"[cookie, recvRoom, username]",[9189,9200],"[chatRooms, selectedChat]",[11513,11527],"[chatRooms, cookie, findIndexFromID, selectedChat, username]",[13118,13136],"[loggedIn, cookie, username]"]